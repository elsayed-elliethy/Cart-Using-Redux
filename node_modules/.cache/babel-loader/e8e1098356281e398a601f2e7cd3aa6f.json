{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst manageCartSlice = createSlice({\n  name: \"Add\",\n  initialState: {\n    items: [],\n    TotalQuantity: 0\n  },\n  reducers: {\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n\n    addItem(state, action) {\n      const newItem = { ...action.payload.value,\n        quantity: 1\n      };\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.TotalQuantity = state.TotalQuantity + 1;\n\n      if (existingItem) {\n        const upatedItem = { ...existingItem,\n          quantity: existingItem.quantity + 1\n        };\n        state.items[state.items.indexOf(existingItem)] = upatedItem;\n        const updateItems = state.items;\n        state.items = updateItems;\n      } else {\n        // state.items = [...state.items, newItem];\n        state.items.push(newItem);\n      }\n    },\n\n    removeItem(state, action) {\n      const removeItem = { ...action.payload.value\n      };\n      const existingItem = state.items.find(item => item.id === removeItem.id);\n      state.TotalQuantity = state.TotalQuantity - 1;\n      const upatedItem = { ...existingItem,\n        quantity: existingItem.quantity - 1\n      };\n      state.items[state.items.indexOf(existingItem)] = upatedItem;\n      let updateItems;\n\n      if (existingItem.quantity === 1) {\n        updateItems = state.items.filter(ele => {\n          return ele.id !== existingItem.id;\n        });\n      } else {\n        updateItems = state.items;\n      }\n\n      state.items = updateItems;\n    }\n\n  }\n});\nexport const manageCartActions = manageCartSlice.actions;\nexport default manageCartSlice;","map":{"version":3,"names":["createSlice","manageCartSlice","name","initialState","items","TotalQuantity","reducers","replaceCart","state","action","totalQuantity","payload","addItem","newItem","value","quantity","existingItem","find","item","id","upatedItem","indexOf","updateItems","push","removeItem","filter","ele","manageCartActions","actions"],"sources":["D:/React2/Redux/Redux/Advanced Redux/01-starting-project/src/store/manageCartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst manageCartSlice = createSlice({\r\n  name: \"Add\",\r\n  initialState: { items: [], TotalQuantity: 0 },\r\n  reducers: {\r\n    replaceCart(state, action) {\r\n      state.totalQuantity = action.payload.totalQuantity;\r\n      state.items = action.payload.items;\r\n    },\r\n    addItem(state, action) {\r\n      const newItem = { ...action.payload.value, quantity: 1 };\r\n      const existingItem = state.items.find((item) => item.id === newItem.id);\r\n      state.TotalQuantity = state.TotalQuantity + 1;\r\n      if (existingItem) {\r\n        const upatedItem = {\r\n          ...existingItem,\r\n          quantity: existingItem.quantity + 1,\r\n        };\r\n        state.items[state.items.indexOf(existingItem)] = upatedItem;\r\n        const updateItems = state.items;\r\n        state.items = updateItems;\r\n      } else {\r\n        // state.items = [...state.items, newItem];\r\n        state.items.push(newItem);\r\n      }\r\n    },\r\n    removeItem(state, action) {\r\n      const removeItem = { ...action.payload.value };\r\n      const existingItem = state.items.find(\r\n        (item) => item.id === removeItem.id\r\n      );\r\n      state.TotalQuantity = state.TotalQuantity - 1;\r\n      const upatedItem = {\r\n        ...existingItem,\r\n        quantity: existingItem.quantity - 1,\r\n      };\r\n      state.items[state.items.indexOf(existingItem)] = upatedItem;\r\n      let updateItems;\r\n      if (existingItem.quantity === 1) {\r\n        updateItems = state.items.filter((ele) => {\r\n          return ele.id !== existingItem.id;\r\n        });\r\n      } else {\r\n        updateItems = state.items;\r\n      }\r\n      state.items = updateItems;\r\n    },\r\n  },\r\n});\r\n\r\nexport const manageCartActions = manageCartSlice.actions;\r\nexport default manageCartSlice;\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,eAAe,GAAGD,WAAW,CAAC;EAClCE,IAAI,EAAE,KAD4B;EAElCC,YAAY,EAAE;IAAEC,KAAK,EAAE,EAAT;IAAaC,aAAa,EAAE;EAA5B,CAFoB;EAGlCC,QAAQ,EAAE;IACRC,WAAW,CAACC,KAAD,EAAQC,MAAR,EAAgB;MACzBD,KAAK,CAACE,aAAN,GAAsBD,MAAM,CAACE,OAAP,CAAeD,aAArC;MACAF,KAAK,CAACJ,KAAN,GAAcK,MAAM,CAACE,OAAP,CAAeP,KAA7B;IACD,CAJO;;IAKRQ,OAAO,CAACJ,KAAD,EAAQC,MAAR,EAAgB;MACrB,MAAMI,OAAO,GAAG,EAAE,GAAGJ,MAAM,CAACE,OAAP,CAAeG,KAApB;QAA2BC,QAAQ,EAAE;MAArC,CAAhB;MACA,MAAMC,YAAY,GAAGR,KAAK,CAACJ,KAAN,CAAYa,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYN,OAAO,CAACM,EAA/C,CAArB;MACAX,KAAK,CAACH,aAAN,GAAsBG,KAAK,CAACH,aAAN,GAAsB,CAA5C;;MACA,IAAIW,YAAJ,EAAkB;QAChB,MAAMI,UAAU,GAAG,EACjB,GAAGJ,YADc;UAEjBD,QAAQ,EAAEC,YAAY,CAACD,QAAb,GAAwB;QAFjB,CAAnB;QAIAP,KAAK,CAACJ,KAAN,CAAYI,KAAK,CAACJ,KAAN,CAAYiB,OAAZ,CAAoBL,YAApB,CAAZ,IAAiDI,UAAjD;QACA,MAAME,WAAW,GAAGd,KAAK,CAACJ,KAA1B;QACAI,KAAK,CAACJ,KAAN,GAAckB,WAAd;MACD,CARD,MAQO;QACL;QACAd,KAAK,CAACJ,KAAN,CAAYmB,IAAZ,CAAiBV,OAAjB;MACD;IACF,CArBO;;IAsBRW,UAAU,CAAChB,KAAD,EAAQC,MAAR,EAAgB;MACxB,MAAMe,UAAU,GAAG,EAAE,GAAGf,MAAM,CAACE,OAAP,CAAeG;MAApB,CAAnB;MACA,MAAME,YAAY,GAAGR,KAAK,CAACJ,KAAN,CAAYa,IAAZ,CAClBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYK,UAAU,CAACL,EADd,CAArB;MAGAX,KAAK,CAACH,aAAN,GAAsBG,KAAK,CAACH,aAAN,GAAsB,CAA5C;MACA,MAAMe,UAAU,GAAG,EACjB,GAAGJ,YADc;QAEjBD,QAAQ,EAAEC,YAAY,CAACD,QAAb,GAAwB;MAFjB,CAAnB;MAIAP,KAAK,CAACJ,KAAN,CAAYI,KAAK,CAACJ,KAAN,CAAYiB,OAAZ,CAAoBL,YAApB,CAAZ,IAAiDI,UAAjD;MACA,IAAIE,WAAJ;;MACA,IAAIN,YAAY,CAACD,QAAb,KAA0B,CAA9B,EAAiC;QAC/BO,WAAW,GAAGd,KAAK,CAACJ,KAAN,CAAYqB,MAAZ,CAAoBC,GAAD,IAAS;UACxC,OAAOA,GAAG,CAACP,EAAJ,KAAWH,YAAY,CAACG,EAA/B;QACD,CAFa,CAAd;MAGD,CAJD,MAIO;QACLG,WAAW,GAAGd,KAAK,CAACJ,KAApB;MACD;;MACDI,KAAK,CAACJ,KAAN,GAAckB,WAAd;IACD;;EA1CO;AAHwB,CAAD,CAAnC;AAiDA,OAAO,MAAMK,iBAAiB,GAAG1B,eAAe,CAAC2B,OAA1C;AACP,eAAe3B,eAAf"},"metadata":{},"sourceType":"module"}