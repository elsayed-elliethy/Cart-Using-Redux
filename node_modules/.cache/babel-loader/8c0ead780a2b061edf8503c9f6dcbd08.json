{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"show\",\n  initialState: {\n    show: false\n  },\n  reducers: {\n    showCart(state, action) {\n      state.show = !state.show;\n    }\n\n  }\n});\nconst addSlice = createSlice({\n  name: \"Add\",\n  initialState: {\n    items: [],\n    TotalQuantity: 0,\n    totalPrice: 0,\n    quantity: 0\n  },\n  reducers: {\n    addItem(state, action) {\n      const newItem = action.payload.value; //   const existingIndex = state.value.findIndex(\n      //     (item) => item.id === action.va.id\n      //   );\n\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      console.log(existingItem, \"hh\");\n\n      if (existingItem) {\n        const upatedItem = { ...existingItem,\n          quantity: state.quantity + 1\n        };\n        state.items[state.items.indexOf(existingItem)] = upatedItem;\n        state.items = [...state.items];\n      } else {\n        state.items = [...state.items, newItem];\n      }\n    },\n\n    addQuantity(state, action) {\n      state.quantity = state.quantity + 1;\n    },\n\n    addTotalQuantity(state, action) {\n      state.TotalQuantity = state.TotalQuantity + 1;\n    },\n\n    addTotalPrice(state, action) {\n      state.totalPrice = state.totalPrice + action.payload.price;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: {\n    cart: cartSlice.reducer,\n    add: addSlice.reducer\n  }\n});\nexport const showCartActions = cartSlice.actions;\nexport const addActions = addSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","cartSlice","name","initialState","show","reducers","showCart","state","action","addSlice","items","TotalQuantity","totalPrice","quantity","addItem","newItem","payload","value","existingItem","find","item","id","console","log","upatedItem","indexOf","addQuantity","addTotalQuantity","addTotalPrice","price","store","reducer","cart","add","showCartActions","actions","addActions"],"sources":["D:/React2/Redux/Redux/Advanced Redux/01-starting-project/src/store/index.js"],"sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"show\",\r\n  initialState: { show: false },\r\n  reducers: {\r\n    showCart(state, action) {\r\n      state.show = !state.show;\r\n    },\r\n  },\r\n});\r\nconst addSlice = createSlice({\r\n  name: \"Add\",\r\n  initialState: { items: [], TotalQuantity: 0, totalPrice: 0, quantity: 0 },\r\n  reducers: {\r\n    addItem(state, action) {\r\n      const newItem = action.payload.value;\r\n\r\n      //   const existingIndex = state.value.findIndex(\r\n      //     (item) => item.id === action.va.id\r\n      //   );\r\n\r\n      const existingItem = state.items.find((item) => item.id === newItem.id);\r\n      console.log(existingItem, \"hh\");\r\n      if (existingItem) {\r\n        const upatedItem = {\r\n          ...existingItem,\r\n          quantity: state.quantity + 1,\r\n        };\r\n        state.items[state.items.indexOf(existingItem)] = upatedItem;\r\n        state.items = [...state.items];\r\n      } else {\r\n        state.items = [...state.items, newItem];\r\n      }\r\n    },\r\n    addQuantity(state, action) {\r\n      state.quantity = state.quantity + 1;\r\n    },\r\n    addTotalQuantity(state, action) {\r\n      state.TotalQuantity = state.TotalQuantity + 1;\r\n    },\r\n    addTotalPrice(state, action) {\r\n      state.totalPrice = state.totalPrice + action.payload.price;\r\n    },\r\n  },\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: { cart: cartSlice.reducer, add: addSlice.reducer },\r\n});\r\n\r\nexport const showCartActions = cartSlice.actions;\r\nexport const addActions = addSlice.actions;\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAEA,MAAMC,SAAS,GAAGF,WAAW,CAAC;EAC5BG,IAAI,EAAE,MADsB;EAE5BC,YAAY,EAAE;IAAEC,IAAI,EAAE;EAAR,CAFc;EAG5BC,QAAQ,EAAE;IACRC,QAAQ,CAACC,KAAD,EAAQC,MAAR,EAAgB;MACtBD,KAAK,CAACH,IAAN,GAAa,CAACG,KAAK,CAACH,IAApB;IACD;;EAHO;AAHkB,CAAD,CAA7B;AASA,MAAMK,QAAQ,GAAGV,WAAW,CAAC;EAC3BG,IAAI,EAAE,KADqB;EAE3BC,YAAY,EAAE;IAAEO,KAAK,EAAE,EAAT;IAAaC,aAAa,EAAE,CAA5B;IAA+BC,UAAU,EAAE,CAA3C;IAA8CC,QAAQ,EAAE;EAAxD,CAFa;EAG3BR,QAAQ,EAAE;IACRS,OAAO,CAACP,KAAD,EAAQC,MAAR,EAAgB;MACrB,MAAMO,OAAO,GAAGP,MAAM,CAACQ,OAAP,CAAeC,KAA/B,CADqB,CAGrB;MACA;MACA;;MAEA,MAAMC,YAAY,GAAGX,KAAK,CAACG,KAAN,CAAYS,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYN,OAAO,CAACM,EAA/C,CAArB;MACAC,OAAO,CAACC,GAAR,CAAYL,YAAZ,EAA0B,IAA1B;;MACA,IAAIA,YAAJ,EAAkB;QAChB,MAAMM,UAAU,GAAG,EACjB,GAAGN,YADc;UAEjBL,QAAQ,EAAEN,KAAK,CAACM,QAAN,GAAiB;QAFV,CAAnB;QAIAN,KAAK,CAACG,KAAN,CAAYH,KAAK,CAACG,KAAN,CAAYe,OAAZ,CAAoBP,YAApB,CAAZ,IAAiDM,UAAjD;QACAjB,KAAK,CAACG,KAAN,GAAc,CAAC,GAAGH,KAAK,CAACG,KAAV,CAAd;MACD,CAPD,MAOO;QACLH,KAAK,CAACG,KAAN,GAAc,CAAC,GAAGH,KAAK,CAACG,KAAV,EAAiBK,OAAjB,CAAd;MACD;IACF,CApBO;;IAqBRW,WAAW,CAACnB,KAAD,EAAQC,MAAR,EAAgB;MACzBD,KAAK,CAACM,QAAN,GAAiBN,KAAK,CAACM,QAAN,GAAiB,CAAlC;IACD,CAvBO;;IAwBRc,gBAAgB,CAACpB,KAAD,EAAQC,MAAR,EAAgB;MAC9BD,KAAK,CAACI,aAAN,GAAsBJ,KAAK,CAACI,aAAN,GAAsB,CAA5C;IACD,CA1BO;;IA2BRiB,aAAa,CAACrB,KAAD,EAAQC,MAAR,EAAgB;MAC3BD,KAAK,CAACK,UAAN,GAAmBL,KAAK,CAACK,UAAN,GAAmBJ,MAAM,CAACQ,OAAP,CAAea,KAArD;IACD;;EA7BO;AAHiB,CAAD,CAA5B;AAoCA,MAAMC,KAAK,GAAG9B,cAAc,CAAC;EAC3B+B,OAAO,EAAE;IAAEC,IAAI,EAAE/B,SAAS,CAAC8B,OAAlB;IAA2BE,GAAG,EAAExB,QAAQ,CAACsB;EAAzC;AADkB,CAAD,CAA5B;AAIA,OAAO,MAAMG,eAAe,GAAGjC,SAAS,CAACkC,OAAlC;AACP,OAAO,MAAMC,UAAU,GAAG3B,QAAQ,CAAC0B,OAA5B;AACP,eAAeL,KAAf"},"metadata":{},"sourceType":"module"}