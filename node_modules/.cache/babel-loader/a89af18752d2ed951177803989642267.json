{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"show\",\n  initialState: {\n    show: false\n  },\n  reducers: {\n    showCart(state, action) {\n      state.show = !state.show;\n    }\n\n  }\n});\nconst addSlice = createSlice({\n  name: \"Add\",\n  initialState: {\n    items: [],\n    TotalQuantity: 0,\n    totalPrice: 0,\n    quantity: 1\n  },\n  reducers: {\n    addItem(state, action) {\n      state.items = [...state.items, action.payload.value];\n    },\n\n    addQuantity(state, action) {\n      state.quantity = state.quantity + 1;\n    },\n\n    addTotalQuantity(state, action) {\n      state.TotalQuantity = state.TotalQuantity + 1;\n    },\n\n    addTotalPrice(state, action) {\n      state.totalPrice = state.totalPrice + action.payload.price;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: {\n    cart: cartSlice.reducer,\n    add: addSlice.reducer\n  }\n});\nexport const showCartActions = cartSlice.actions;\nexport const addActions = addSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","cartSlice","name","initialState","show","reducers","showCart","state","action","addSlice","items","TotalQuantity","totalPrice","quantity","addItem","payload","value","addQuantity","addTotalQuantity","addTotalPrice","price","store","reducer","cart","add","showCartActions","actions","addActions"],"sources":["D:/React2/Redux/Redux/Advanced Redux/01-starting-project/src/store/index.js"],"sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"show\",\r\n  initialState: { show: false },\r\n  reducers: {\r\n    showCart(state, action) {\r\n      state.show = !state.show;\r\n    },\r\n  },\r\n});\r\nconst addSlice = createSlice({\r\n  name: \"Add\",\r\n  initialState: { items: [], TotalQuantity: 0, totalPrice: 0, quantity: 1 },\r\n  reducers: {\r\n    addItem(state, action) {\r\n      state.items = [...state.items, action.payload.value];\r\n    },\r\n    addQuantity(state, action) {\r\n      state.quantity = state.quantity + 1;\r\n    },\r\n    addTotalQuantity(state, action) {\r\n      state.TotalQuantity = state.TotalQuantity + 1;\r\n    },\r\n    addTotalPrice(state, action) {\r\n      state.totalPrice = state.totalPrice + action.payload.price;\r\n    },\r\n  },\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: { cart: cartSlice.reducer, add: addSlice.reducer },\r\n});\r\n\r\nexport const showCartActions = cartSlice.actions;\r\nexport const addActions = addSlice.actions;\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAEA,MAAMC,SAAS,GAAGF,WAAW,CAAC;EAC5BG,IAAI,EAAE,MADsB;EAE5BC,YAAY,EAAE;IAAEC,IAAI,EAAE;EAAR,CAFc;EAG5BC,QAAQ,EAAE;IACRC,QAAQ,CAACC,KAAD,EAAQC,MAAR,EAAgB;MACtBD,KAAK,CAACH,IAAN,GAAa,CAACG,KAAK,CAACH,IAApB;IACD;;EAHO;AAHkB,CAAD,CAA7B;AASA,MAAMK,QAAQ,GAAGV,WAAW,CAAC;EAC3BG,IAAI,EAAE,KADqB;EAE3BC,YAAY,EAAE;IAAEO,KAAK,EAAE,EAAT;IAAaC,aAAa,EAAE,CAA5B;IAA+BC,UAAU,EAAE,CAA3C;IAA8CC,QAAQ,EAAE;EAAxD,CAFa;EAG3BR,QAAQ,EAAE;IACRS,OAAO,CAACP,KAAD,EAAQC,MAAR,EAAgB;MACrBD,KAAK,CAACG,KAAN,GAAc,CAAC,GAAGH,KAAK,CAACG,KAAV,EAAiBF,MAAM,CAACO,OAAP,CAAeC,KAAhC,CAAd;IACD,CAHO;;IAIRC,WAAW,CAACV,KAAD,EAAQC,MAAR,EAAgB;MACzBD,KAAK,CAACM,QAAN,GAAiBN,KAAK,CAACM,QAAN,GAAiB,CAAlC;IACD,CANO;;IAORK,gBAAgB,CAACX,KAAD,EAAQC,MAAR,EAAgB;MAC9BD,KAAK,CAACI,aAAN,GAAsBJ,KAAK,CAACI,aAAN,GAAsB,CAA5C;IACD,CATO;;IAURQ,aAAa,CAACZ,KAAD,EAAQC,MAAR,EAAgB;MAC3BD,KAAK,CAACK,UAAN,GAAmBL,KAAK,CAACK,UAAN,GAAmBJ,MAAM,CAACO,OAAP,CAAeK,KAArD;IACD;;EAZO;AAHiB,CAAD,CAA5B;AAmBA,MAAMC,KAAK,GAAGrB,cAAc,CAAC;EAC3BsB,OAAO,EAAE;IAAEC,IAAI,EAAEtB,SAAS,CAACqB,OAAlB;IAA2BE,GAAG,EAAEf,QAAQ,CAACa;EAAzC;AADkB,CAAD,CAA5B;AAIA,OAAO,MAAMG,eAAe,GAAGxB,SAAS,CAACyB,OAAlC;AACP,OAAO,MAAMC,UAAU,GAAGlB,QAAQ,CAACiB,OAA5B;AACP,eAAeL,KAAf"},"metadata":{},"sourceType":"module"}