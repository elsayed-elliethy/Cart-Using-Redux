{"version":3,"sources":["components/Layout/Notifications.module.css","components/Shop/ProductItem.module.css","components/Cart/CartButton.module.css","components/UI/Card.module.css","components/Cart/Cart.module.css","components/Layout/MainHeader.module.css","components/Shop/Products.module.css","hooks/use-http.js","store/cartSlice.js","store/manageCartSlice.js","store/index.js","components/UI/Card.js","components/Cart/CartItem.js","components/Cart/Cart.js","components/Cart/CartButton.js","components/Layout/MainHeader.js","components/Layout/Layout.js","components/Shop/ProductItem.js","components/Shop/Products.js","App.js","index.js","components/Cart/CartItem.module.css"],"names":["module","exports","useHttp","useState","isLoading","setIsLoading","error","setError","requestFn","useCallback","configReq","applyData","fetch","url","method","headers","body","JSON","stringify","response","ok","Error","json","data","message","cartSlice","createSlice","name","initialState","show","reducers","toggleCart","state","action","showCartActions","actions","manageCartSlice","items","TotalQuantity","changed","replaceCart","payload","totalQuantity","addItem","newItem","value","quantity","existingItem","find","item","id","upatedItem","indexOf","updateItems","push","removeItem","filter","ele","manageCartActions","store","configureStore","reducer","cart","add","Card","props","className","classes","card","children","CartItem","title","price","cartItems","useSelector","total","dispatch","useDispatch","toFixed","itemprice","details","onClick","event","target","Cart","map","CartButton","totalAmount","badge","MainHeader","header","Layout","ProductItem","description","allProducts","productsArray","Products","products","App","showNotification","setShowNotification","showCart","sendData","useEffect","content","getData","console","log","styles","loading","success","notification","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.2fb0b963.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notifications_notification__28xsE\",\"error\":\"Notifications_error__11E_l\",\"success\":\"Notifications_success__cT74q\",\"loading\":\"Notifications_loading__31oi1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProductItem_item__2Q4cm\",\"price\":\"ProductItem_price__3rYAH\",\"actions\":\"ProductItem_actions__1JBf-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-button\":\"CartButton_cart-button__31HqT\",\"badge\":\"CartButton_badge__kgFil\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__o9YLE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart\":\"Cart_cart__3MiaO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainHeader_header__1ktvO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"products\":\"Products_products__Hr5b4\"};","import React, { Component, useCallback, useState } from \"react\";\r\n\r\nlet isInitial = true;\r\nconst useHttp = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const requestFn = useCallback(async (configReq, applyData) => {\r\n    // if (isInitial) {\r\n    //   isInitial = false;\r\n    //   return;\r\n    // }\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await fetch(configReq.url, {\r\n        method: configReq.method ? configReq.method : \"GET\",\r\n        headers: configReq.headers ? configReq.headers : {},\r\n        body: configReq.body ? JSON.stringify(configReq.body) : null,\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error(\"Request Field\");\r\n      }\r\n      const data = await response.json();\r\n      applyData(data);\r\n    } catch (err) {\r\n      setError(err.message || \"Something Went Wrong\");\r\n    }\r\n\r\n    setIsLoading(false);\r\n  }, []);\r\n  return {\r\n    isLoading: isLoading,\r\n    error: error,\r\n    requestFn: requestFn,\r\n  };\r\n};\r\n\r\nexport default useHttp;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport useHttp from \"../hooks/use-http\";\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"show\",\r\n  initialState: { show: false },\r\n  reducers: {\r\n    toggleCart(state, action) {\r\n      state.show = !state.show;\r\n    },\r\n  },\r\n});\r\n\r\nexport const showCartActions = cartSlice.actions;\r\nexport default cartSlice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst manageCartSlice = createSlice({\r\n  name: \"Add\",\r\n  initialState: { items: [], TotalQuantity: 0, changed: false },\r\n  reducers: {\r\n    replaceCart(state, action) {\r\n      state.items = action.payload.items;\r\n      state.TotalQuantity = action.payload.totalQuantity;\r\n    },\r\n    addItem(state, action) {\r\n      const newItem = { ...action.payload.value, quantity: 1 };\r\n      const existingItem = state.items.find((item) => item.id === newItem.id);\r\n      state.TotalQuantity = state.TotalQuantity + 1;\r\n      state.changed = true;\r\n      if (existingItem) {\r\n        const upatedItem = {\r\n          ...existingItem,\r\n          quantity: existingItem.quantity + 1,\r\n        };\r\n        state.items[state.items.indexOf(existingItem)] = upatedItem;\r\n        const updateItems = state.items;\r\n        state.items = updateItems;\r\n      } else {\r\n        // state.items = [...state.items, newItem];\r\n        state.items.push(newItem);\r\n      }\r\n    },\r\n    removeItem(state, action) {\r\n      const removeItem = { ...action.payload.value };\r\n      const existingItem = state.items.find(\r\n        (item) => item.id === removeItem.id\r\n      );\r\n      state.TotalQuantity = state.TotalQuantity - 1;\r\n      state.changed = true;\r\n      const upatedItem = {\r\n        ...existingItem,\r\n        quantity: existingItem.quantity - 1,\r\n      };\r\n      state.items[state.items.indexOf(existingItem)] = upatedItem;\r\n      let updateItems;\r\n      if (existingItem.quantity === 1) {\r\n        updateItems = state.items.filter((ele) => {\r\n          return ele.id !== existingItem.id;\r\n        });\r\n      } else {\r\n        updateItems = state.items;\r\n      }\r\n      state.items = updateItems;\r\n    },\r\n  },\r\n});\r\n\r\nexport const manageCartActions = manageCartSlice.actions;\r\nexport default manageCartSlice;\r\n","import { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\nimport cartSlice from \"./cartSlice\";\r\nimport manageCartSlice from \"./manageCartSlice\";\r\n\r\nconst store = configureStore({\r\n  reducer: { cart: cartSlice.reducer, add: manageCartSlice.reducer },\r\n});\r\n\r\nexport default store;\r\n","import classes from './Card.module.css';\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <section\r\n      className={`${classes.card} ${props.className ? props.className : ''}`}\r\n    >\r\n      {props.children}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import classes from \"./CartItem.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { manageCartActions } from \"../../store/manageCartSlice\";\r\nconst CartItem = (props) => {\r\n  const { title, quantity, price, id } = props;\r\n  const cartItems = useSelector((state) => state.add.items);\r\n  const total = price * quantity;\r\n\r\n  const dispatch = useDispatch();\r\n  const addItemHandler = (event) => {\r\n    const [item] = cartItems.filter((ele) => {\r\n      return ele.id === event.target.id;\r\n    });\r\n    dispatch(manageCartActions.addItem({ value: item }));\r\n  };\r\n  const removeItemHandler = (event) => {\r\n    const [item] = cartItems.filter((ele) => {\r\n      return ele.id === event.target.id;\r\n    });\r\n    dispatch(manageCartActions.removeItem({ value: item }));\r\n  };\r\n  return (\r\n    <li className={classes.item}>\r\n      <header>\r\n        <h3>{title}</h3>\r\n        <div className={classes.price}>\r\n          ${total.toFixed(2)}{\" \"}\r\n          <span className={classes.itemprice}>(${price.toFixed(2)}/item)</span>\r\n        </div>\r\n      </header>\r\n      <div className={classes.details}>\r\n        <div className={classes.quantity}>\r\n          x <span>{quantity}</span>\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <button onClick={removeItemHandler} id={id}>\r\n            -\r\n          </button>\r\n          <button onClick={addItemHandler} id={id}>\r\n            +\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","import Card from \"../UI/Card\";\r\nimport classes from \"./Cart.module.css\";\r\nimport CartItem from \"./CartItem\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport useHttp from \"../../hooks/use-http\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { manageCartActions } from \"../../store/manageCartSlice\";\r\nimport React, { Component } from \"react\";\r\n\r\nconst Cart = (props) => {\r\n  const cartItems = useSelector((state) => {\r\n    return state.add.items;\r\n  });\r\n\r\n  return (\r\n    <Card className={classes.cart}>\r\n      <h2>Your Shopping Cart</h2>\r\n      <ul>\r\n        {cartItems.map((ele) => {\r\n          return (\r\n            <CartItem\r\n              key={ele.id}\r\n              id={ele.id}\r\n              title={ele.title}\r\n              quantity={ele.quantity}\r\n              price={ele.price}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import classes from \"./CartButton.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { showCartActions } from \"../../store/cartSlice\";\r\nconst CartButton = (props) => {\r\n  const totalAmount = useSelector((state) => state.add.TotalQuantity);\r\n  const dispatch = useDispatch();\r\n\r\n  const showCartHandler = () => {\r\n    dispatch(showCartActions.toggleCart());\r\n  };\r\n  return (\r\n    <button className={classes[\"cart-button\"]} onClick={showCartHandler}>\r\n      <span>My Cart</span>\r\n      <span className={classes.badge}>{totalAmount}</span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default CartButton;\r\n","import CartButton from \"../Cart/CartButton\";\r\nimport classes from \"./MainHeader.module.css\";\r\n\r\nconst MainHeader = (props) => {\r\n  return (\r\n    <header className={classes.header}>\r\n      <h1>ReduxCart</h1>\r\n      <nav>\r\n        <ul>\r\n          <li>\r\n            <CartButton />\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default MainHeader;\r\n","import { Fragment } from 'react';\r\nimport MainHeader from './MainHeader';\r\n\r\nconst Layout = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <MainHeader />\r\n      <main>{props.children}</main>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import Card from \"../UI/Card\";\r\nimport classes from \"./ProductItem.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux/es/exports\";\r\nimport { manageCartActions } from \"../../store/manageCartSlice\";\r\nconst ProductItem = (props) => {\r\n  const { title, price, description } = props;\r\n  const allProducts = props.productsArray;\r\n  const cartItems = useSelector((state) => state.add.items);\r\n  const dispatch = useDispatch();\r\n\r\n  const addItemHandler = (event) => {\r\n    const [item] = allProducts.filter((ele) => {\r\n      return ele.id === event.target.id;\r\n    });\r\n\r\n    dispatch(manageCartActions.addItem({ value: item }));\r\n    // dispatch(manageCartActions.addTotalQuantity());\r\n  };\r\n  return (\r\n    <li className={classes.item}>\r\n      <Card>\r\n        <header>\r\n          <h3>{title}</h3>\r\n          <div className={classes.price}>${price.toFixed(2)}</div>\r\n        </header>\r\n        <p>{description}</p>\r\n        <div className={classes.actions}>\r\n          <button onClick={addItemHandler} id={props.id}>\r\n            Add to Cart\r\n          </button>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ProductItem;\r\n","import ProductItem from \"./ProductItem\";\r\nimport classes from \"./Products.module.css\";\r\n\r\nconst Products = (props) => {\r\n  const products = [\r\n    {\r\n      id: \"t1\",\r\n      title: \"test1\",\r\n      price: 6,\r\n      description: \"This is a first product - amazing!\",\r\n    },\r\n    {\r\n      id: \"t2\",\r\n      title: \"test2\",\r\n      price: 7,\r\n      description: \"This is a second product - amazing!\",\r\n    },\r\n  ];\r\n  return (\r\n    <section className={classes.products}>\r\n      <h2>Buy your favorite products</h2>\r\n      <ul>\r\n        {products.map((ele) => {\r\n          return (\r\n            <ProductItem\r\n              productsArray={products}\r\n              key={ele.id}\r\n              id={ele.id}\r\n              title={ele.title}\r\n              price={ele.price}\r\n              description={ele.description}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n","import Cart from \"./components/Cart/Cart\";\r\nimport Layout from \"./components/Layout/Layout\";\r\nimport Products from \"./components/Shop/Products\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Fragment, useEffect } from \"react\";\r\nimport useHttp from \"./hooks/use-http\";\r\nimport styles from \"./components/Layout/Notifications.module.css\";\r\nimport { useState } from \"react\";\r\nimport { manageCartActions } from \"./store/manageCartSlice\";\r\n\r\nfunction App() {\r\n  const [showNotification, setShowNotification] = useState(false);\r\n  const showCart = useSelector((state) => {\r\n    return state.cart.show;\r\n  });\r\n  const cart = useSelector((state) => {\r\n    return state.add;\r\n  });\r\n\r\n  /////////////\r\n\r\n  const { isLoading, error, requestFn: sendData } = useHttp();\r\n  useEffect(() => {\r\n    if (!cart.changed) {\r\n      return;\r\n    }\r\n    const submitFn = () => {\r\n      setShowNotification(true);\r\n    };\r\n    sendData(\r\n      {\r\n        url: \"https://food-e7d7c-default-rtdb.firebaseio.com/cart.json\",\r\n        method: \"PUT\",\r\n        body: cart,\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      },\r\n      submitFn\r\n    );\r\n  }, [sendData, cart]);\r\n\r\n  ///////////\r\n\r\n  const dispatch = useDispatch();\r\n  const {\r\n    isLoading: loadingForFetch,\r\n    error: errorDuringFetch,\r\n    requestFn: getData,\r\n  } = useHttp();\r\n\r\n  useEffect(() => {\r\n    const submitFn = (data) => {\r\n      dispatch(\r\n        manageCartActions.replaceCart({\r\n          items: data.items,\r\n          totalQuantity: data.TotalQuantity,\r\n        })\r\n      );\r\n      console.log(data.items, \"dddddd\");\r\n    };\r\n    getData(\r\n      {\r\n        url: \"https://food-e7d7c-default-rtdb.firebaseio.com/cart.json\",\r\n      },\r\n      submitFn\r\n    );\r\n  }, [getData, dispatch]);\r\n\r\n  ///////////\r\n  let content;\r\n\r\n  if (error) {\r\n    content = (\r\n      <div className={styles.error}>\r\n        <h2>Failed!</h2>\r\n        <p>Something went wrong!</p>\r\n      </div>\r\n    );\r\n  }\r\n  if (isLoading) {\r\n    content = (\r\n      <div className={styles.loading}>\r\n        <h2>Sending...</h2>\r\n      </div>\r\n    );\r\n  }\r\n  if (!isLoading && !error && showNotification) {\r\n    content = (\r\n      <div className={styles.success}>\r\n        <h2>Success!</h2>\r\n        <p>Send Cart Data Successfully</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className={styles.notification}>{content}</div>\r\n\r\n      {/* <div className={styles.notification}>{content}</div> */}\r\n\r\n      <Layout>\r\n        {showCart && <Cart />}\r\n        <Products />\r\n      </Layout>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from \"react-dom/client\";\r\nimport { Provider } from \"react-redux/es/exports\";\r\nimport store from \"./store\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CartItem_item__jBVoF\",\"details\":\"CartItem_details__1KSGy\",\"quantity\":\"CartItem_quantity__VsrUN\",\"price\":\"CartItem_price__1ifEd\",\"itemprice\":\"CartItem_itemprice__WSLqR\",\"actions\":\"CartItem_actions__dlBWy\"};"],"sourceRoot":""}